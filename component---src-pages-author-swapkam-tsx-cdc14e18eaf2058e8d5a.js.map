{"version":3,"file":"component---src-pages-author-swapkam-tsx-cdc14e18eaf2058e8d5a.js","mappings":"6KAcO,MAAMA,EAA0BC,IAQhC,IARiC,MACtCC,EAAK,YACLC,EAAW,SACXC,EACAC,MAAOC,EAAS,WAChBC,EAAU,KACVC,EAAI,SACJC,GACDR,EACC,MACEC,MAAOQ,EACPP,YAAaQ,EAAkB,QAC/BC,EAAO,gBACPC,EACAR,MAAOS,EAAiB,SACxBC,IC1BWC,EAAAA,EAAAA,gBAAe,cAchBC,KAAKC,aDeXC,EAAM,CACVjB,MAAOA,GAASQ,EAChBP,YAAaA,GAAeQ,EAC5BN,MAAOC,EAAS,GACTM,EAAUN,EAAS,GACnBM,EAAUE,EACjBM,IAAI,GAAIR,GAAUR,GAAQ,IAC1BS,kBACAE,WACAR,aACAC,QAGF,OACEa,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQF,EAAIjB,OACZmB,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIhB,cACtCkB,EAAAA,cAAA,QAAMC,KAAK,QAAQC,QAASJ,EAAId,QAChCgB,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,wBAClCF,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAIjB,QACxCmB,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIC,MACtCC,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASJ,EAAIhB,cAC9CkB,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAId,QACxCgB,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,QAASJ,EAAIN,kBAE1CQ,EAAAA,cAAA,QAAMG,SAAS,YAAYD,QAAQ,UACnCF,EAAAA,cAAA,QAAMG,SAAS,eAAeD,QAASb,IACvCW,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASrB,IACnCmB,EAAAA,cAAA,QAAMG,SAAS,SAASD,QAASJ,EAAIC,MACrCC,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASpB,IACzCkB,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASJ,EAAId,QACvCgB,EAAAA,cAAA,QACEG,SAAS,eACTD,QAASR,GAAYb,GAASQ,IAEhCW,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAASf,IAClCa,EAAAA,cAAA,QAAMI,IAAI,OAAOC,KAAMC,EAAAA,IACtBlB,EACA,C,6GEhDP,UAjBgBmB,IAEZP,EAAAA,cAACQ,EAAAA,EAAM,KACLR,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OACES,UAAU,sBACVC,IAAKC,EAAAA,EACLC,IAAG,mBACHC,MAAO,MAETb,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,oBAQJ,MAAMc,EAAOA,IAClBd,EAAAA,cAACrB,EAAAA,EAAG,CACFE,MAAM,mBACNC,YAAY,yI","sources":["webpack://swapkam/./src/components/seo.tsx","webpack://swapkam/./src/hooks/use-site-metadata.tsx","webpack://swapkam/./src/pages/author/swapkam.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\nimport favicon from \"../images/icon.svg\";\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  image?: string;\n  categories?: string;\n  type?: string;\n  children?: ReactNode;\n}\n\nexport const SEO: React.FC<SEOProps> = ({\n  title,\n  description,\n  pathname,\n  image: postImage,\n  categories,\n  type,\n  children,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    siteUrl,\n    twitterUsername,\n    image: siteMetadataImage,\n    imageAlt,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: postImage\n      ? `${siteUrl}${postImage}`\n      : `${siteUrl}${siteMetadataImage}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n    imageAlt,\n    categories,\n    type,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n\n      <meta property=\"og:locale\" content=\"en_GB\" />\n      <meta property=\"og:site_name\" content={defaultTitle} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta\n        property=\"og:image:alt\"\n        content={imageAlt || title || defaultTitle}\n      />\n      <meta property=\"og:type\" content={type} />\n      <link rel=\"icon\" href={favicon} />\n      {children}\n    </>\n  );\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\nimport { SEO } from \"../../components/seo\";\nimport Layout from \"../../components/layout\";\nimport Author from \"../../images/icon.svg\";\n\nconst SwapKam = () => {\n  return (\n    <Layout>\n      <>\n        <img\n          className=\"mx-auto block mt-20\"\n          src={Author}\n          alt={`Author: Swap Kam`}\n          width={250}\n        />\n        <h2>Swap Kam</h2>\n        <p>I am a blogger</p>\n      </>\n    </Layout>\n  );\n};\n\nexport default SwapKam;\n\nexport const Head = () => (\n  <SEO\n    title=\"Author - SwapKam\"\n    description=\"Reach out to SwapKam with any questions or feedback. We value your input! Get in touch via the form or use our contact details below.\"\n  />\n);\n"],"names":["SEO","_ref","title","description","pathname","image","postImage","categories","type","children","defaultTitle","defaultDescription","siteUrl","twitterUsername","siteMetadataImage","imageAlt","useStaticQuery","site","siteMetadata","seo","url","React","name","content","property","rel","href","favicon","SwapKam","Layout","className","src","Author","alt","width","Head"],"sourceRoot":""}