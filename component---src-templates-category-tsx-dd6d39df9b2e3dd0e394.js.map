{"version":3,"file":"component---src-templates-category-tsx-dd6d39df9b2e3dd0e394.js","mappings":"4KAcO,MAAMA,EAA0BC,IAQhC,IARiC,MACtCC,EAAK,YACLC,EAAW,SACXC,EACAC,MAAOC,EAAS,WAChBC,EAAU,KACVC,EAAI,SACJC,GACDR,EACC,MACEC,MAAOQ,EACPP,YAAaQ,EAAkB,QAC/BC,EAAO,gBACPC,EACAR,MAAOS,EAAiB,SACxBC,IC1BWC,EAAAA,EAAAA,gBAAe,cAchBC,KAAKC,aDeXC,EAAM,CACVjB,MAAOA,GAASQ,EAChBP,YAAaA,GAAeQ,EAC5BN,MAAOC,EAAS,GACTM,EAAUN,EAAS,GACnBM,EAAUE,EACjBM,IAAI,GAAIR,GAAUR,GAAQ,IAC1BS,kBACAE,WACAR,aACAC,QAGF,OACEa,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQF,EAAIjB,OACZmB,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIhB,cACtCkB,EAAAA,cAAA,QAAMC,KAAK,QAAQC,QAASJ,EAAId,QAChCgB,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,wBAClCF,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAIjB,QACxCmB,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIC,MACtCC,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASJ,EAAIhB,cAC9CkB,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAId,QACxCgB,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,QAASJ,EAAIN,kBAE1CQ,EAAAA,cAAA,QAAMG,SAAS,YAAYD,QAAQ,UACnCF,EAAAA,cAAA,QAAMG,SAAS,eAAeD,QAASb,IACvCW,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASrB,IACnCmB,EAAAA,cAAA,QAAMG,SAAS,SAASD,QAASJ,EAAIC,MACrCC,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASpB,IACzCkB,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASJ,EAAId,QACvCgB,EAAAA,cAAA,QACEG,SAAS,eACTD,QAASR,GAAYb,GAASQ,IAEhCW,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAASf,IAClCa,EAAAA,cAAA,QAAMI,IAAI,OAAOC,KAAMC,EAAAA,IACtBlB,EACA,C,6GEzBP,UApB0CR,IAA2B,IAA1B,KAAE2B,EAAI,YAAEC,GAAa5B,EAC9D,MAAM6B,EAAWD,EAAYC,SACvBC,EAAQH,EAAKI,OAAOC,MAE1B,OACEZ,EAAAA,cAACa,EAAAA,EAAM,KACLb,EAAAA,cAAA,WACAA,EAAAA,cAAA,UAAKS,EAASK,OAAO,GAAGC,cAAgBN,EAASO,MAAM,IACvDhB,EAAAA,cAAA,UACGU,EAAMO,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAClBlB,EAAAA,cAAA,MAAIoB,IAAKD,EAAKE,IACZrB,EAAAA,cAACsB,EAAAA,KAAI,CAACC,GAAIJ,EAAKK,YAAYC,MAAON,EAAKK,YAAY3C,OAChD,MAIF,EAMN,MAAM6C,EAAOA,IAClB1B,EAAAA,cAACrB,EAAAA,EAAG,CAACE,MAAM,qBAAqBC,YAAY,yBAAwBkB,EAAAA,cAAA,QAAMC,KAAK,SAASC,QAAQ,Y","sources":["webpack://swapkam/./src/components/seo.tsx","webpack://swapkam/./src/hooks/use-site-metadata.tsx","webpack://swapkam/./src/templates/category.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\nimport favicon from \"../images/icon.svg\";\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  image?: string;\n  categories?: string;\n  type?: string;\n  children?: ReactNode;\n}\n\nexport const SEO: React.FC<SEOProps> = ({\n  title,\n  description,\n  pathname,\n  image: postImage,\n  categories,\n  type,\n  children,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    siteUrl,\n    twitterUsername,\n    image: siteMetadataImage,\n    imageAlt,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: postImage\n      ? `${siteUrl}${postImage}`\n      : `${siteUrl}${siteMetadataImage}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n    imageAlt,\n    categories,\n    type,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n\n      <meta property=\"og:locale\" content=\"en_GB\" />\n      <meta property=\"og:site_name\" content={defaultTitle} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta\n        property=\"og:image:alt\"\n        content={imageAlt || title || defaultTitle}\n      />\n      <meta property=\"og:type\" content={type} />\n      <link rel=\"icon\" href={favicon} />\n      {children}\n    </>\n  );\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","//./src/templates/category.tsx\nimport React from 'react';\nimport { graphql, Link, PageProps } from 'gatsby';\nimport Layout from \"../components/layout\";\nimport { SEO } from \"../components/seo\";\n\ninterface CategoryProps extends PageProps {\n  data: {\n    allMdx: {\n      edges: Array<{\n        node: {\n          id: string;\n          frontmatter: {\n            title: string;\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    category: string;\n  };\n}\n\nconst Category: React.FC<CategoryProps> = ({ data, pageContext }) => {\n  const category = pageContext.category;\n  const posts = data.allMdx.edges;\n\n  return (\n    <Layout>\n      <div>\n      <h1>{category.charAt(0).toUpperCase() + category.slice(1)}</h1>\n      <ul>\n        {posts.map(({ node }) => (\n          <li key={node.id}>\n            <Link to={node.frontmatter.slug}>{node.frontmatter.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n    </Layout>\n  );\n};\n\nexport default Category;\n\nexport const Head = () => (\n  <SEO title=\"Category - SwapKam\" description='Explore the Category!'><meta name=\"robots\" content=\"noindex\"/></SEO>\n);\n\nexport const query = graphql`\n  query($category: String!) {\n    allMdx(\n      filter: { frontmatter: { category: { eq: $category } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["SEO","_ref","title","description","pathname","image","postImage","categories","type","children","defaultTitle","defaultDescription","siteUrl","twitterUsername","siteMetadataImage","imageAlt","useStaticQuery","site","siteMetadata","seo","url","React","name","content","property","rel","href","favicon","data","pageContext","category","posts","allMdx","edges","Layout","charAt","toUpperCase","slice","map","_ref2","node","key","id","Link","to","frontmatter","slug","Head"],"sourceRoot":""}