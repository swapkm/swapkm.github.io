{"version":3,"file":"component---src-pages-author-swapkam-tsx-b6f3951b864b6b550cd7.js","mappings":"6KAcO,MAAMA,EAA0BC,IAQhC,IARiC,MACtCC,EAAK,YACLC,EAAW,SACXC,EACAC,MAAOC,EAAS,WAChBC,EAAU,KACVC,EAAI,SACJC,GACDR,EACC,MACEC,MAAOQ,EACPP,YAAaQ,EAAkB,QAC/BC,EAAO,gBACPC,EACAR,MAAOS,EAAiB,SACxBC,IC1BWC,EAAAA,EAAAA,gBAAe,cAchBC,KAAKC,aDeXC,EAAM,CACVjB,MAAOA,GAASQ,EAChBP,YAAaA,GAAeQ,EAC5BN,MAAOC,EACF,GAAEM,IAAUN,IACZ,GAAEM,IAAUE,IACjBM,IAAM,GAAER,IAAUR,GAAa,KAC/BS,kBACAE,WACAR,aACAC,QAGF,OACEa,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQF,EAAIjB,OACZmB,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIhB,cACtCkB,EAAAA,cAAA,QAAMC,KAAK,QAAQC,QAASJ,EAAId,QAChCgB,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,wBAClCF,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAIjB,QACxCmB,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIC,MACtCC,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASJ,EAAIhB,cAC9CkB,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAId,QACxCgB,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,QAASJ,EAAIN,kBAE1CQ,EAAAA,cAAA,QAAMG,SAAS,YAAYD,QAAQ,UACnCF,EAAAA,cAAA,QAAMG,SAAS,eAAeD,QAASb,IACvCW,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASrB,IACnCmB,EAAAA,cAAA,QAAMG,SAAS,SAASD,QAASJ,EAAIC,MACrCC,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASpB,IACzCkB,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASJ,EAAId,QACvCgB,EAAAA,cAAA,QACEG,SAAS,eACTD,QAASR,GAAYb,GAASQ,IAEhCW,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAASf,IAClCa,EAAAA,cAAA,QAAMI,IAAI,OAAOC,KAAMC,EAAAA,IACtBlB,EACA,C,6GEhDP,UAjBgBmB,IAEZP,EAAAA,cAACQ,EAAAA,EAAM,KACLR,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OACES,UAAU,sBACVC,IAAKC,EAAAA,EACLC,IAAM,mBACNC,MAAO,MAETb,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,oBAQJ,MAAMc,EAAOA,IAClBd,EAAAA,cAACrB,EAAAA,EAAG,CACFE,MAAM,mBACNC,YAAY,yI","sources":["webpack://swapkam/./src/components/seo.tsx","webpack://swapkam/./src/hooks/use-site-metadata.tsx","webpack://swapkam/./src/pages/author/swapkam.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\r\nimport favicon from \"../images/icon.svg\";\r\n\r\ninterface SEOProps {\r\n  title?: string;\r\n  description?: string;\r\n  pathname?: string;\r\n  image?: string;\r\n  categories?: string;\r\n  type?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const SEO: React.FC<SEOProps> = ({\r\n  title,\r\n  description,\r\n  pathname,\r\n  image: postImage,\r\n  categories,\r\n  type,\r\n  children,\r\n}) => {\r\n  const {\r\n    title: defaultTitle,\r\n    description: defaultDescription,\r\n    siteUrl,\r\n    twitterUsername,\r\n    image: siteMetadataImage,\r\n    imageAlt,\r\n  } = useSiteMetadata();\r\n\r\n  const seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    image: postImage\r\n      ? `${siteUrl}${postImage}`\r\n      : `${siteUrl}${siteMetadataImage}`,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n    twitterUsername,\r\n    imageAlt,\r\n    categories,\r\n    type,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:image\" content={seo.image} />\r\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\r\n\r\n      <meta property=\"og:locale\" content=\"en_GB\" />\r\n      <meta property=\"og:site_name\" content={defaultTitle} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:url\" content={seo.url} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={seo.image} />\r\n      <meta\r\n        property=\"og:image:alt\"\r\n        content={imageAlt || title || defaultTitle}\r\n      />\r\n      <meta property=\"og:type\" content={type} />\r\n      <link rel=\"icon\" href={favicon} />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n","import { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          twitterUsername\r\n          image\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return data.site.siteMetadata;\r\n};\r\n","import React from \"react\";\r\nimport { SEO } from \"../../components/seo\";\r\nimport Layout from \"../../components/layout\";\r\nimport Author from \"../../images/icon.svg\";\r\n\r\nconst SwapKam = () => {\r\n  return (\r\n    <Layout>\r\n      <>\r\n        <img\r\n          className=\"mx-auto block mt-20\"\r\n          src={Author}\r\n          alt={`Author: Swap Kam`}\r\n          width={250}\r\n        />\r\n        <h2>Swap Kam</h2>\r\n        <p>I am a blogger</p>\r\n      </>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SwapKam;\r\n\r\nexport const Head = () => (\r\n  <SEO\r\n    title=\"Author - SwapKam\"\r\n    description=\"Reach out to SwapKam with any questions or feedback. We value your input! Get in touch via the form or use our contact details below.\"\r\n  />\r\n);\r\n"],"names":["SEO","_ref","title","description","pathname","image","postImage","categories","type","children","defaultTitle","defaultDescription","siteUrl","twitterUsername","siteMetadataImage","imageAlt","useStaticQuery","site","siteMetadata","seo","url","React","name","content","property","rel","href","favicon","SwapKam","Layout","className","src","Author","alt","width","Head"],"sourceRoot":""}