{"version":3,"file":"component---src-pages-index-tsx-f285e654190b5651770b.js","mappings":"6KAcO,MAAMA,EAA0BC,IAQhC,IARiC,MACtCC,EAAK,YACLC,EAAW,SACXC,EACAC,MAAOC,EAAS,WAChBC,EAAU,KACVC,EAAI,SACJC,GACDR,EACC,MACEC,MAAOQ,EACPP,YAAaQ,EAAkB,QAC/BC,EAAO,gBACPC,EACAR,MAAOS,EAAiB,SACxBC,IC1BWC,EAAAA,EAAAA,gBAAe,cAchBC,KAAKC,aDeXC,EAAM,CACVjB,MAAOA,GAASQ,EAChBP,YAAaA,GAAeQ,EAC5BN,MAAOC,EACF,GAAEM,IAAUN,IACZ,GAAEM,IAAUE,IACjBM,IAAM,GAAER,IAAUR,GAAa,KAC/BS,kBACAE,WACAR,aACAC,QAGF,OACEa,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQF,EAAIjB,OACZmB,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIhB,cACtCkB,EAAAA,cAAA,QAAMC,KAAK,QAAQC,QAASJ,EAAId,QAChCgB,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,wBAClCF,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAIjB,QACxCmB,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIC,MACtCC,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASJ,EAAIhB,cAC9CkB,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAId,QACxCgB,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,QAASJ,EAAIN,kBAE1CQ,EAAAA,cAAA,QAAMG,SAAS,YAAYD,QAAQ,UACnCF,EAAAA,cAAA,QAAMG,SAAS,eAAeD,QAASb,IACvCW,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASrB,IACnCmB,EAAAA,cAAA,QAAMG,SAAS,SAASD,QAASJ,EAAIC,MACrCC,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASpB,IACzCkB,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASJ,EAAId,QACvCgB,EAAAA,cAAA,QACEG,SAAS,eACTD,QAASR,GAAYb,GAASQ,IAEhCW,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAASf,IAClCa,EAAAA,cAAA,QAAMI,IAAI,OAAOC,KAAMC,EAAAA,IACtBlB,EACA,C,6GELP,UAjDuCR,IAAwB,IAAvB,KAAE2B,EAAI,SAAEC,GAAU5B,EACxD,MAAM6B,EAAQF,EAAKG,OAAOC,MAC1B,OACEX,EAAAA,cAACY,EAAAA,EAAM,KACLZ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,MAAIa,MAAO,CAAEC,UAAY,SACtBL,EAAMM,KAAKC,IACV,MAAMnC,EAAQmC,EAAKC,YAAYpC,OAASmC,EAAKE,OAAOC,KAEpD,OACEnB,EAAAA,cAAA,MAAIoB,IAAKJ,EAAKC,YAAYE,KAAME,UAAU,YACxCrB,EAAAA,cAACsB,EAAAA,KAAI,CACHD,UAAU,qFACVE,GAAIP,EAAKC,YAAYE,MAErBnB,EAAAA,cAAA,WACGgB,EAAKC,YAAYjC,OAChBgB,EAAAA,cAAA,OACEwB,IAAKR,EAAKC,YAAYjC,MACtByC,IAAKT,EAAKC,YAAYpC,MACtBgC,MAAO,CAAEa,SAAU,OAAQC,OAAQ,QACnCN,UAAU,sBAGdrB,EAAAA,cAAA,MAAIqB,UAAU,sCACZrB,EAAAA,cAAA,YAAOnB,IAETmB,EAAAA,cAAA,SAAOqB,UAAU,+BACdL,EAAKC,YAAYW,OAGtB5B,EAAAA,cAAA,WACEA,EAAAA,cAAA,KACEqB,UAAU,iBACVQ,wBAAyB,CACvBC,OAAQd,EAAKC,YAAYnC,aAAekC,EAAKe,aAKlD,MAKN,EAMb,MAAMC,EAAS,CACb,WAAY,qBACZ,SAAU,CACR,CACE,WAAY,qBACZ,QAAS,eACTjC,IAAK,uBACLkC,KAAM,uCAER,CACE,QAAS,UACT,MAAO,+BACPlC,IAAK,sBACLE,KAAM,UACNiC,cAAe,KACfC,UAAW,CAAE,MAAO,+BACpBC,WAAY,QACZC,gBAAiB,CACf,QAAS,eACTC,OAAQ,8CACR,cAAe,uCAMVC,EAAOA,IAClBvC,EAAAA,cAACrB,EAAAA,EAAG,CAACE,MAAM,0BACTmB,EAAAA,cAAA,UAAQb,KAAK,uBAAuBqD,KAAKC,UAAUT,I","sources":["webpack://swapkam/./src/components/seo.tsx","webpack://swapkam/./src/hooks/use-site-metadata.tsx","webpack://swapkam/./src/pages/index.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\r\nimport favicon from \"../images/icon.svg\";\r\n\r\ninterface SEOProps {\r\n  title?: string;\r\n  description?: string;\r\n  pathname?: string;\r\n  image?: string;\r\n  categories?: string;\r\n  type?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport const SEO: React.FC<SEOProps> = ({\r\n  title,\r\n  description,\r\n  pathname,\r\n  image: postImage,\r\n  categories,\r\n  type,\r\n  children,\r\n}) => {\r\n  const {\r\n    title: defaultTitle,\r\n    description: defaultDescription,\r\n    siteUrl,\r\n    twitterUsername,\r\n    image: siteMetadataImage,\r\n    imageAlt,\r\n  } = useSiteMetadata();\r\n\r\n  const seo = {\r\n    title: title || defaultTitle,\r\n    description: description || defaultDescription,\r\n    image: postImage\r\n      ? `${siteUrl}${postImage}`\r\n      : `${siteUrl}${siteMetadataImage}`,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n    twitterUsername,\r\n    imageAlt,\r\n    categories,\r\n    type,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      <meta name=\"image\" content={seo.image} />\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={seo.title} />\r\n      <meta name=\"twitter:url\" content={seo.url} />\r\n      <meta name=\"twitter:description\" content={seo.description} />\r\n      <meta name=\"twitter:image\" content={seo.image} />\r\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\r\n\r\n      <meta property=\"og:locale\" content=\"en_GB\" />\r\n      <meta property=\"og:site_name\" content={defaultTitle} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:url\" content={seo.url} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={seo.image} />\r\n      <meta\r\n        property=\"og:image:alt\"\r\n        content={imageAlt || title || defaultTitle}\r\n      />\r\n      <meta property=\"og:type\" content={type} />\r\n      <link rel=\"icon\" href={favicon} />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n","import { graphql, useStaticQuery } from \"gatsby\";\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          twitterUsername\r\n          image\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return data.site.siteMetadata;\r\n};\r\n","import * as React from \"react\";\r\nimport type { HeadFC, PageProps } from \"gatsby\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport { SEO } from \"../components/seo\";\r\n\r\ninterface IndexPageProps extends PageProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst IndexPage: React.FC<PageProps> = ({ data, location }) => {\r\n  const posts = data.allMdx.nodes;\r\n  return (\r\n    <Layout>\r\n      <>\r\n        <ol style={{ listStyle: `none` }}>\r\n          {posts.map((post) => {\r\n            const title = post.frontmatter.title || post.fields.slug;\r\n\r\n            return (\r\n              <li key={post.frontmatter.slug} className=\"md:px-20\">\r\n                <Link\r\n                  className=\"block rounded-3xl bg-pink-50 shadow-md hover:shadow-lg transition duration-300 p-2\"\r\n                  to={post.frontmatter.slug}\r\n                >\r\n                  <div>\r\n                    {post.frontmatter.image && (\r\n                      <img\r\n                        src={post.frontmatter.image}\r\n                        alt={post.frontmatter.title}\r\n                        style={{ maxWidth: \"100%\", height: \"auto\" }}\r\n                        className=\"block rounded-3xl\"\r\n                      />\r\n                    )}\r\n                    <h2 className=\"text-2xl font-bold text-shadow m-5\">\r\n                      <span>{title}</span>\r\n                    </h2>\r\n                    <small className=\"text-shadow mx-5 text-black\">\r\n                      {post.frontmatter.date}\r\n                    </small>\r\n                  </div>\r\n                  <div>\r\n                    <p\r\n                      className=\"m-5 text-black\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: post.frontmatter.description || post.excerpt,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ol>\r\n      </>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nconst schema = {\r\n  \"@context\": \"https://schema.org\",\r\n  \"@graph\": [\r\n    {\r\n      \"@context\": \"https://schema.org\",\r\n      \"@type\": \"Organization\",\r\n      url: \"https://swapkam.com/\",\r\n      logo: \"https://swapkam.com/images/logo.svg\",\r\n    },\r\n    {\r\n      \"@type\": \"WebSite\",\r\n      \"@id\": \"https://swapkam.com/#website\",\r\n      url: \"https://swapkam.com\",\r\n      name: \"SwapKam\",\r\n      alternateName: \"SK\",\r\n      publisher: { \"@id\": \"https://swapkam.com/#person\" },\r\n      inLanguage: \"en-US\",\r\n      potentialAction: {\r\n        \"@type\": \"SearchAction\",\r\n        target: \"https://swapkam.com/?s={search_term_string}\",\r\n        \"query-input\": \"required name=search_term_string\",\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nexport const Head = () => (\r\n  <SEO title=\"SwapKam - Tech Insides\">\r\n    <script type=\"application/ld+json\">{JSON.stringify(schema)}</script>\r\n  </SEO>\r\n);\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          slug\r\n          description\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["SEO","_ref","title","description","pathname","image","postImage","categories","type","children","defaultTitle","defaultDescription","siteUrl","twitterUsername","siteMetadataImage","imageAlt","useStaticQuery","site","siteMetadata","seo","url","React","name","content","property","rel","href","favicon","data","location","posts","allMdx","nodes","Layout","style","listStyle","map","post","frontmatter","fields","slug","key","className","Link","to","src","alt","maxWidth","height","date","dangerouslySetInnerHTML","__html","excerpt","schema","logo","alternateName","publisher","inLanguage","potentialAction","target","Head","JSON","stringify"],"sourceRoot":""}